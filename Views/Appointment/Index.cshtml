@model IEnumerable<ShinSerwis.Models.Appointment>

@{
    ViewData["Title"] = "Мои записи";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>Мои записи</h1>
        <a asp-controller="Service" asp-action="Index" class="btn btn-primary">
            <i class="fas fa-plus"></i> Записаться на услугу
        </a>
    </div>

    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Дата и время</th>
                                    <th>Услуга</th>
                                    <th>Автомобиль</th>
                                    <th>Статус</th>
                                    <th>Действия</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.Any())
                                {
                                    @foreach (var appointment in Model)
                                    {
                                        <tr>
                                            <td>
                                                <strong class="d-block" id="local-time-@appointment.Id"></strong>
                                                <div class="small text-muted mt-1">
                                                    Серверное время (UTC): 
                                                    <span class="utc-date" data-utc-date="@appointment.AppointmentDate.ToString("o")">
                                                        @appointment.AppointmentDate.ToString("dd.MM.yyyy HH:mm")
                                                    </span>
                                                </div>
                                            </td>
                                            <td>@appointment.Service.Name</td>
                                            <td>@appointment.Car.Brand @appointment.Car.Model (@appointment.Car.LicensePlate)</td>
                                            <td>
                                                <span class="badge @GetStatusBadgeClass(appointment.Status)">
                                                    @GetStatusText(appointment.Status)
                                                </span>
                                            </td>
                                            <td>
                                                <a asp-action="AppointmentDetails" asp-route-id="@appointment.Id" class="btn btn-info btn-sm mb-2">
                                                    <i class="fas fa-info-circle"></i> Подробнее
                                                </a>
                                                
                                                @if (appointment.Status == AppointmentStatus.Pending)
                                                {
                                                    <form asp-action="Cancel" asp-route-id="@appointment.Id" method="post" style="display:inline;">
                                                        @Html.AntiForgeryToken()
                                                        <button type="submit" class="btn btn-danger btn-sm" onclick="return confirm('Вы уверены, что хотите отменить запись?');">
                                                            <i class="fas fa-times"></i> Отменить
                                                        </button>
                                                    </form>
                                                }
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="5" class="text-center py-4">
                                            <div class="alert alert-info mb-0">
                                                <i class="fas fa-info-circle me-2"></i>
                                                У вас еще нет записей.
                                                <a asp-controller="Service" asp-action="Index" class="alert-link">Записаться на услугу</a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    string GetStatusBadgeClass(AppointmentStatus status)
    {
        return status switch
        {
            AppointmentStatus.Pending => "bg-warning",
            AppointmentStatus.InProgress => "bg-info",
            AppointmentStatus.Completed => "bg-success",
            AppointmentStatus.Cancelled => "bg-danger",
            _ => "bg-secondary"
        };
    }

    string GetStatusText(AppointmentStatus status)
    {
        return status switch
        {
            AppointmentStatus.Pending => "Ожидает",
            AppointmentStatus.InProgress => "В процессе",
            AppointmentStatus.Completed => "Завершено",
            AppointmentStatus.Cancelled => "Отменено",
            _ => "Неизвестно"
        };
    }
}

@section Scripts {
    <script>
        function formatDate(date, includeSeconds = false) {
            const options = { 
                year: 'numeric', 
                month: '2-digit', 
                day: '2-digit',
                hour: '2-digit', 
                minute: '2-digit',
                hour12: false
            };
            
            if (includeSeconds) {
                options.second = '2-digit';
            }
            
            return new Intl.DateTimeFormat(navigator.language || 'ru-RU', options).format(date);
        }

        function convertDates() {
            console.log('Начинаем конвертацию UTC дат в локальное время...');
            
            const dateElements = document.querySelectorAll('.utc-date');
            console.log(`Найдено ${dateElements.length} элементов для конвертации`);
            
            if (dateElements.length === 0) {
                console.log('Элементы для конвертации не найдены. Пробуем через 500мс...');
                setTimeout(convertDates, 500);
                return;
            }

            const timeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;
            console.log(`Ваш часовой пояс: ${timeZone}`);
            
            dateElements.forEach((element, index) => {
                const isoDate = element.getAttribute('data-utc-date');
                if (!isoDate) {
                    console.error(`Элемент #${index} не имеет атрибута data-utc-date`);
                    return;
                }
                
                try {
                    const elementId = element.closest('tr').querySelector('[id^="local-time-"]').id;
                    const appointmentId = elementId.split('-')[2];
                    
                    const utcDate = new Date(isoDate);
                    if (isNaN(utcDate.getTime())) {
                        console.error(`Некорректная дата: ${isoDate}`);
                        return;
                    }
                    
                    const localDateStr = formatDate(utcDate);
                    console.log(`Конвертация для записи #${appointmentId}: ${isoDate} -> ${localDateStr}`);
                    
                    const localTimeElement = document.getElementById(`local-time-${appointmentId}`);
                    if (localTimeElement) {
                        localTimeElement.textContent = `Ваше местное время: ${localDateStr}`;
                        localTimeElement.title = `Часовой пояс: ${timeZone}`;
                    } else {
                        console.error(`Не найден элемент для локального времени с ID local-time-${appointmentId}`);
                    }
                } catch (error) {
                    console.error(`Ошибка при обработке даты: ${error.message}`);
                }
            });
            
            console.log('Конвертация завершена');
        }

        if (document.readyState === 'loading') {
            document.addEventListener('DOMContentLoaded', convertDates);
        } else {
            convertDates();
        }
        
        window.addEventListener('load', function() {
            setTimeout(convertDates, 500);
            setTimeout(convertDates, 1500);
        });
    </script>
} 